{"ast":null,"code":"var _jsxFileName = \"/Users/manana/Documents/auth-test-task/src/containers/LoginContainer.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Container } from \"@mui/material\";\nimport Login from \"../components/LoginContent\";\nimport { AuthContext } from \"../context/authContext\";\nimport { AuthTypes } from \"../context/authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginContainer = () => {\n  _s();\n  const {\n    dispatch\n  } = React.useContext(AuthContext);\n  const login = (email, password) => {\n    dispatch({\n      type: AuthTypes.LOGIN,\n      payload: {\n        email,\n        password\n      }\n    });\n    return;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Login, {\n      login: login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginContainer, \"y0TpHjmA0G5gpKtNPtwKueTIMNE=\");\n_c = LoginContainer;\nexport default LoginContainer;\nvar _c;\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"names":["React","Container","Login","AuthContext","AuthTypes","jsxDEV","_jsxDEV","LoginContainer","_s","dispatch","useContext","login","email","password","type","LOGIN","payload","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manana/Documents/auth-test-task/src/containers/LoginContainer.tsx"],"sourcesContent":["import React from \"react\";\nimport { Container } from \"@mui/material\";\nimport Login from \"../components/LoginContent\";\nimport { AuthContext } from \"../context/authContext\";\nimport { AuthContextType } from \"../context/auth\";\nimport { AuthTypes } from \"../context/authReducer\";\n\nconst LoginContainer: React.FC = () => {\n  const { dispatch } = React.useContext(AuthContext);\n\n  const login = (email: string, password: string) => {\n    dispatch({\n      type: AuthTypes.LOGIN,\n      payload: { email, password },\n    });\n\n    return\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Login login={login} />\n    </Container>\n  );\n};\n\nexport default LoginContainer;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAOC,KAAK,MAAM,4BAA4B;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAwB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAS,CAAC,GAAGT,KAAK,CAACU,UAAU,CAACP,WAAW,CAAC;EAElD,MAAMQ,KAAK,GAAGA,CAACC,KAAa,EAAEC,QAAgB,KAAK;IACjDJ,QAAQ,CAAC;MACPK,IAAI,EAAEV,SAAS,CAACW,KAAK;MACrBC,OAAO,EAAE;QAAEJ,KAAK;QAAEC;MAAS;IAC7B,CAAC,CAAC;IAEF;EACF,CAAC;EAED,oBACEP,OAAA,CAACL,SAAS;IAACgB,QAAQ,EAAC,IAAI;IAAAC,QAAA,eACtBZ,OAAA,CAACJ,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEhB,CAAC;AAACd,EAAA,CAjBID,cAAwB;AAAAgB,EAAA,GAAxBhB,cAAwB;AAmB9B,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}