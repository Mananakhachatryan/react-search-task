{"ast":null,"code":"export let ProductTypes = /*#__PURE__*/function (ProductTypes) {\n  ProductTypes[\"GET\"] = \"GET\";\n  return ProductTypes;\n}({});\nexport const ProductReducer = (state, action) => {\n  switch (action.type) {\n    case ProductTypes.GET:\n      {\n        const newState = {\n          data: [...state.data, action.payload]\n        };\n        return {\n          data: action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\n_c = ProductReducer;\nvar _c;\n$RefreshReg$(_c, \"ProductReducer\");","map":{"version":3,"names":["ProductTypes","ProductReducer","state","action","type","GET","newState","data","payload","_c","$RefreshReg$"],"sources":["/Users/manana/Documents/react-search-task/src/context/productReducer.tsx"],"sourcesContent":["import { IProduct, ActionMap } from \"./product\";\n\nexport enum ProductTypes {\n  GET = \"GET\",\n}\n\nexport type ProductState = {\n  data: IProduct[];\n};\n\ntype ProductPayload = {\n  [ProductTypes.GET]: IProduct[];\n};\n\nexport type ProductActions =\n  ActionMap<ProductPayload>[keyof ActionMap<ProductPayload>];\n\nexport const ProductReducer = (state: ProductState, action: ProductActions) => {\n  switch (action.type) {\n    case ProductTypes.GET: {\n      const newState = {\n        data: [...state.data, action.payload],\n      };\n      return {\n        data: action.payload\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAEA,WAAYA,YAAY,0BAAZA,YAAY;EAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA;AAexB,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAmB,EAAEC,MAAsB,KAAK;EAC7E,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,YAAY,CAACK,GAAG;MAAE;QACrB,MAAMC,QAAQ,GAAG;UACfC,IAAI,EAAE,CAAC,GAAGL,KAAK,CAACK,IAAI,EAAEJ,MAAM,CAACK,OAAO;QACtC,CAAC;QACD,OAAO;UACLD,IAAI,EAAEJ,MAAM,CAACK;QACf,CAAC;MACH;IAEA;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAACO,EAAA,GAdWR,cAAc;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}