{"ast":null,"code":"export let Types = /*#__PURE__*/function (Types) {\n  Types[\"RESTORE\"] = \"RESTORE\";\n  Types[\"CREATE\"] = \"CREATE_USER\";\n  Types[\"LOGIN\"] = \"LOGIN\";\n  Types[\"LOGOUT\"] = \"LOGOUT\";\n  return Types;\n}({});\nexport const CONTEXT_STORAGE_KEY = \"auth\";\nconst getSessionExpireDate = () => {\n  const date = new Date();\n  date.setFullYear(date.getFullYear() + 1);\n  return date;\n};\nexport const getStorageContext = () => {\n  const raw = localStorage.getItem(CONTEXT_STORAGE_KEY);\n  return raw ? JSON.parse(raw) : undefined;\n};\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case AuthTypes.GET:\n      {\n        const newState = {\n          data: [...state.data, action.payload]\n        };\n        localStorage.setItem(CONTEXT_STORAGE_KEY, JSON.stringify(newState));\n        return newState;\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["Types","CONTEXT_STORAGE_KEY","getSessionExpireDate","date","Date","setFullYear","getFullYear","getStorageContext","raw","localStorage","getItem","JSON","parse","undefined","authReducer","state","action","type","AuthTypes","GET","newState","data","payload","setItem","stringify"],"sources":["/Users/manana/Documents/react-search-task/src/context/authReducer.tsx"],"sourcesContent":["import { IUser, ISession, ActionMap, AuthContextStorageType } from \"./auth\";\n\nexport enum Types {\n  RESTORE = \"RESTORE\",\n  CREATE = \"CREATE_USER\",\n  LOGIN = \"LOGIN\",\n  LOGOUT = \"LOGOUT\",\n}\n\nexport const CONTEXT_STORAGE_KEY = \"auth\";\n\nconst getSessionExpireDate = () => {\n  const date = new Date();\n  date.setFullYear(date.getFullYear() + 1);\n  return date;\n};\n\nexport const getStorageContext = () => {\n  const raw = localStorage.getItem(CONTEXT_STORAGE_KEY);\n  return raw ? (JSON.parse(raw) as AuthContextStorageType) : undefined;\n};\n\nexport type AuthState = {\n  users: IUser[];\n  session: ISession | null;\n};\n\ntype AuthPayload = {\n  [AuthTypes.CREATE]: IUser;\n  [AuthTypes.LOGIN]: {\n    email: string;\n    password: string;\n  };\n  [AuthTypes.LOGOUT]: {};\n};\n\nexport type AuthActions = ActionMap<AuthPayload>[keyof ActionMap<AuthPayload>];\n\nexport const authReducer = (state: AuthState, action: AuthActions) => {\n  switch (action.type) {\n    case AuthTypes.GET: {\n      const newState = {\n        data: [...state.data, action.payload],\n      };\n      localStorage.setItem(CONTEXT_STORAGE_KEY, JSON.stringify(newState));\n\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAEA,WAAYA,KAAK,0BAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAALA,KAAK;EAAA,OAALA,KAAK;AAAA;AAOjB,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAEzC,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvBD,IAAI,CAACE,WAAW,CAACF,IAAI,CAACG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;EACxC,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;EACrC,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACT,mBAAmB,CAAC;EACrD,OAAOO,GAAG,GAAIG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAA8BK,SAAS;AACtE,CAAC;AAkBD,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAgB,EAAEC,MAAmB,KAAK;EACpE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKC,SAAS,CAACC,GAAG;MAAE;QAClB,MAAMC,QAAQ,GAAG;UACfC,IAAI,EAAE,CAAC,GAAGN,KAAK,CAACM,IAAI,EAAEL,MAAM,CAACM,OAAO;QACtC,CAAC;QACDb,YAAY,CAACc,OAAO,CAACtB,mBAAmB,EAAEU,IAAI,CAACa,SAAS,CAACJ,QAAQ,CAAC,CAAC;QAEnE,OAAOA,QAAQ;MACjB;IAEA;MACE,OAAOL,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}