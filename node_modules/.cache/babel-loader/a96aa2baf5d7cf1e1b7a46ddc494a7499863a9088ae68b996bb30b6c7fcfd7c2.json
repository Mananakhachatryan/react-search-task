{"ast":null,"code":"export let AuthTypes = /*#__PURE__*/function (AuthTypes) {\n  AuthTypes[\"CREATE\"] = \"CREATE_USER\";\n  AuthTypes[\"LOGIN\"] = \"LOGIN\";\n  AuthTypes[\"LOGOUT\"] = \"LOGOUT\";\n  return AuthTypes;\n}({});\nconst getSessionExpireDate = () => {\n  const date = new Date();\n  date.setFullYear(date.getFullYear() + 1);\n  return date;\n};\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case AuthTypes.CREATE:\n      const newUsers = [...state.users, state.user];\n      const newSession = {\n        email: user.email,\n        expiredAt: getSessionExpireDate()\n      };\n      localStorage.setItem(CONTEXT_STORAGE_KEY, JSON.stringify({\n        users: newUsers,\n        session: newSession\n      }));\n      return;\n    case AuthTypes.Delete:\n      return [...state.filter(product => product.id !== action.payload.id)];\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["AuthTypes","getSessionExpireDate","date","Date","setFullYear","getFullYear","authReducer","state","action","type","CREATE","newUsers","users","user","newSession","email","expiredAt","localStorage","setItem","CONTEXT_STORAGE_KEY","JSON","stringify","session","Delete","filter","product","id","payload"],"sources":["/Users/manana/Documents/auth-test-task/src/context/authReducer.tsx"],"sourcesContent":["import { IUser, ISession, ActionMap } from \"./auth\";\n\nexport enum AuthTypes {\n  CREATE = \"CREATE_USER\",\n  LOGIN = \"LOGIN\",\n  LOGOUT = \"LOGOUT\",\n}\n\nconst getSessionExpireDate = () => {\n  const date = new Date();\n  date.setFullYear(date.getFullYear() + 1);\n  return date;\n};\n\ntype AuthPayload = {\n  [AuthTypes.CREATE]: IUser;\n  [AuthTypes.LOGIN]: {\n    email: string;\n    password: string;\n  };\n  [AuthTypes.LOGOUT]: {};\n};\n\nexport type AuthState = {\n  users: IUser[];\n  session: ISession | null;\n};\n\nexport type AuthActions = ActionMap<AuthPayload>[keyof ActionMap<AuthPayload>];\n\nexport const authReducer = (state: AuthState, action: AuthActions) => {\n  switch (action.type) {\n    case AuthTypes.CREATE:\n      const newUsers = [...state.users, state.user];\n      const newSession = {\n        email: user.email,\n        expiredAt: getSessionExpireDate(),\n      };\n\n      localStorage.setItem(\n        CONTEXT_STORAGE_KEY,\n        JSON.stringify({ users: newUsers, session: newSession })\n      );\n\n      return;\n    case AuthTypes.Delete:\n      return [...state.filter((product) => product.id !== action.payload.id)];\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAEA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAMrB,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;EACvBD,IAAI,CAACE,WAAW,CAACF,IAAI,CAACG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;EACxC,OAAOH,IAAI;AACb,CAAC;AAkBD,OAAO,MAAMI,WAAW,GAAGA,CAACC,KAAgB,EAAEC,MAAmB,KAAK;EACpE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,SAAS,CAACU,MAAM;MACnB,MAAMC,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACK,KAAK,EAAEL,KAAK,CAACM,IAAI,CAAC;MAC7C,MAAMC,UAAU,GAAG;QACjBC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,SAAS,EAAEf,oBAAoB,CAAC;MAClC,CAAC;MAEDgB,YAAY,CAACC,OAAO,CAClBC,mBAAmB,EACnBC,IAAI,CAACC,SAAS,CAAC;QAAET,KAAK,EAAED,QAAQ;QAAEW,OAAO,EAAER;MAAW,CAAC,CACzD,CAAC;MAED;IACF,KAAKd,SAAS,CAACuB,MAAM;MACnB,OAAO,CAAC,GAAGhB,KAAK,CAACiB,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKlB,MAAM,CAACmB,OAAO,CAACD,EAAE,CAAC,CAAC;IACzE;MACE,OAAOnB,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}