{"ast":null,"code":"var _jsxFileName = \"/Users/manana/Documents/auth-test-task/src/context/authContext.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { authReducer } from \"./authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainReducer = ({\n  auth\n}, action) => ({\n  auth: authReducer(auth, action)\n});\nconst initialState = {\n  auth: {\n    users: [],\n    session: null\n  }\n};\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  state: initialState,\n  dispatch: () => null\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = React.useReducer(mainReducer, initialState);\n  React.useEffect(() => {\n    const context = getStorageContext();\n    if (context) {\n      setUser(context.users);\n      setSession(context.session);\n    }\n  }, []);\n  const login = (email, password) => {\n    // const findMatch = users.find(\n    //   (user) => user.email === email && user.password === password\n    // );\n    // if (findMatch) {\n    //   const newSession = {\n    //     email: findMatch.email,\n    //     expiredAt: getSessionExpireDate(),\n    //   };\n\n    //   setSession(newSession);\n\n    //   localStorage.setItem(\n    //     CONTEXT_STORAGE_KEY,\n    //     JSON.stringify({ users, session: newSession })\n    //   );\n\n    //   return true;\n    // }\n\n    // return false;\n  };\n  const logout = () => {\n    setSession(null);\n    localStorage.setItem(CONTEXT_STORAGE_KEY, JSON.stringify({\n      users,\n      session: null\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      createUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","authReducer","jsxDEV","_jsxDEV","mainReducer","auth","action","initialState","users","session","AuthContext","createContext","state","dispatch","AuthProvider","children","_s","useReducer","useEffect","context","getStorageContext","setUser","setSession","login","email","password","logout","localStorage","setItem","CONTEXT_STORAGE_KEY","JSON","stringify","Provider","value","createUser","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manana/Documents/auth-test-task/src/context/authContext.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  AuthContextType,\n  ISession,\n  IUser,\n  AuthContextStorageType,\n} from \"./auth\";\nimport { AuthState, authReducer, AuthActions } from \"./authReducer\";\n\n\ntype InitialStateType = {\n  auth: AuthState;\n};\n\nconst mainReducer = ({ auth }: InitialStateType, action: AuthActions) => ({\n  auth: authReducer(auth, action),\n});\n\nconst initialState = {\n  auth: {\n    users: [],\n    session: null,\n  },\n};\n\nexport const AuthContext = React.createContext<{\n  state: InitialStateType;\n  dispatch: React.Dispatch<AuthActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst AuthProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const [state, dispatch] = React.useReducer(mainReducer, initialState);\n\n  React.useEffect(() => {\n    const context = getStorageContext();\n\n    if (context) {\n      setUser(context.users);\n      setSession(context.session);\n    }\n  }, []);\n\n\n  const login = (email: string, password: string): boolean => {\n    // const findMatch = users.find(\n    //   (user) => user.email === email && user.password === password\n    // );\n    // if (findMatch) {\n    //   const newSession = {\n    //     email: findMatch.email,\n    //     expiredAt: getSessionExpireDate(),\n    //   };\n\n    //   setSession(newSession);\n\n    //   localStorage.setItem(\n    //     CONTEXT_STORAGE_KEY,\n    //     JSON.stringify({ users, session: newSession })\n    //   );\n\n    //   return true;\n    // }\n\n    // return false;\n  };\n\n  const logout = () => {\n    setSession(null);\n    localStorage.setItem(\n      CONTEXT_STORAGE_KEY,\n      JSON.stringify({ users, session: null })\n    );\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, createUser, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAO9B,SAAoBC,WAAW,QAAqB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOpE,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAuB,CAAC,EAAEC,MAAmB,MAAM;EACxED,IAAI,EAAEJ,WAAW,CAACI,IAAI,EAAEC,MAAM;AAChC,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnBF,IAAI,EAAE;IACJG,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGV,KAAK,CAACW,aAAa,CAG3C;EACDC,KAAK,EAAEL,YAAY;EACnBM,QAAQ,EAAEA,CAAA,KAAM;AAClB,CAAC,CAAC;AAEF,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC,GAAGb,KAAK,CAACiB,UAAU,CAACb,WAAW,EAAEG,YAAY,CAAC;EAErEP,KAAK,CAACkB,SAAS,CAAC,MAAM;IACpB,MAAMC,OAAO,GAAGC,iBAAiB,CAAC,CAAC;IAEnC,IAAID,OAAO,EAAE;MACXE,OAAO,CAACF,OAAO,CAACX,KAAK,CAAC;MACtBc,UAAU,CAACH,OAAO,CAACV,OAAO,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMc,KAAK,GAAGA,CAACC,KAAa,EAAEC,QAAgB,KAAc;IAC1D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;EAAA,CACD;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBJ,UAAU,CAAC,IAAI,CAAC;IAChBK,YAAY,CAACC,OAAO,CAClBC,mBAAmB,EACnBC,IAAI,CAACC,SAAS,CAAC;MAAEvB,KAAK;MAAEC,OAAO,EAAE;IAAK,CAAC,CACzC,CAAC;EACH,CAAC;EAED,oBACEN,OAAA,CAACO,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAErB,KAAK;MAAEsB,UAAU;MAAEX,KAAK;MAAEG;IAAO,CAAE;IAAAX,QAAA,EAC/DA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAjDIF,YAA+C;AAAAyB,EAAA,GAA/CzB,YAA+C;AAmDrD,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}