{"ast":null,"code":"export let AuthTypes = /*#__PURE__*/function (AuthTypes) {\n  AuthTypes[\"CREATE\"] = \"CREATE_USER\";\n  AuthTypes[\"LOGIN\"] = \"LOGIN\";\n  AuthTypes[\"LOGOUT\"] = \"LOGOUT\";\n  return AuthTypes;\n}({});\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case AuthTypes.CREATE:\n      return;\n    case AuthTypes.Delete:\n      return [...state.filter(product => product.id !== action.payload.id)];\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["AuthTypes","authReducer","state","action","type","CREATE","Delete","filter","product","id","payload"],"sources":["/Users/manana/Documents/auth-test-task/src/context/authReducer.tsx"],"sourcesContent":["import { IUser, ISession, ActionMap } from \"./auth\";\n\nexport enum AuthTypes {\n  CREATE = \"CREATE_USER\",\n  LOGIN = \"LOGIN\",\n  LOGOUT = \"LOGOUT\",\n}\n\ntype AuthPayload = {\n  [AuthTypes.CREATE]: IUser;\n  [AuthTypes.LOGIN]: {\n    email: string;\n    password: string;\n  };\n  [AuthTypes.LOGOUT]: {};\n};\n\nexport type AuthState = {\n  users: IUser[];\n  session: ISession | null;\n}\n\nexport type AuthActions = ActionMap<AuthPayload>[keyof ActionMap<AuthPayload>];\n\nexport const authReducer = (state: AuthState, action: AuthActions) => {\n  switch (action.type) {\n    case AuthTypes.CREATE:\n\n    \n      return ;\n    case AuthTypes.Delete:\n      return [...state.filter((product) => product.id !== action.payload.id)];\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAEA,WAAYA,SAAS,0BAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAsBrB,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAgB,EAAEC,MAAmB,KAAK;EACpE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKJ,SAAS,CAACK,MAAM;MAGnB;IACF,KAAKL,SAAS,CAACM,MAAM;MACnB,OAAO,CAAC,GAAGJ,KAAK,CAACK,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACD,EAAE,CAAC,CAAC;IACzE;MACE,OAAOP,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}