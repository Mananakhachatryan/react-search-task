{"ast":null,"code":"var _jsxFileName = \"/Users/manana/Documents/auth-test-task/src/context/authContext.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/React.createContext(null);\nconst CONTEXT_STORAGE_KEY = \"auth\";\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [users, setUser] = React.useState([]);\n  const [session, setSession] = React.useState(null);\n  React.useEffect(() => {\n    const raw = localStorage.getItem(CONTEXT_STORAGE_KEY);\n    const context = raw ? JSON.parse(raw) : undefined;\n    if (context) {\n      setUser(context.users);\n      setSession(context.session);\n    }\n  }, []);\n  const createUser = user => {\n    setUser([...users, user]);\n    setSession({\n      email: user.email,\n      expiredAt: getSessionExpireDate()\n    });\n  };\n  const getSessionExpireDate = () => {\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n    return date;\n  };\n  const login = (email, password) => {\n    const findMatch = users.find(user => user.email === email && user.password === password);\n    if (findMatch) {\n      setSession({\n        email: findMatch.email,\n        expiredAt: getSessionExpireDate()\n      });\n    }\n  };\n  const logout = () => {\n    setSession(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      users,\n      session,\n      createUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"wwthgYA/wM69dIwylmQJi/rsEcY=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AuthContext","createContext","CONTEXT_STORAGE_KEY","AuthProvider","children","_s","users","setUser","useState","session","setSession","useEffect","raw","localStorage","getItem","context","JSON","parse","undefined","createUser","user","email","expiredAt","getSessionExpireDate","date","Date","setFullYear","getFullYear","login","password","findMatch","find","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manana/Documents/auth-test-task/src/context/authContext.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  AuthContextType,\n  ISession,\n  IUser,\n  AuthContextStorageType,\n} from \"./auth\";\n\nexport const AuthContext = React.createContext<AuthContextType | null>(null);\n\nconst CONTEXT_STORAGE_KEY = \"auth\";\n\nconst AuthProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const [users, setUser] = React.useState<IUser[]>([]);\n  const [session, setSession] = React.useState<ISession | null>(null);\n\n  React.useEffect(() => {\n    const raw = localStorage.getItem(CONTEXT_STORAGE_KEY);\n\n    const context = raw\n      ? (JSON.parse(raw) as AuthContextStorageType)\n      : undefined;\n\n    if (context) {\n      setUser(context.users);\n      setSession(context.session);\n    }\n  }, []);\n\n\n  const createUser = (user: IUser) => {\n    setUser([...users, user]);\n    setSession({ email: user.email, expiredAt: getSessionExpireDate() });\n  };\n\n  const getSessionExpireDate = () => {\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + 1);\n    return date;\n  };\n\n  const login = (email: string, password: string) => {\n    const findMatch = users.find(\n      (user) => user.email === email && user.password === password\n    );\n    if (findMatch) {\n      setSession({ email: findMatch.email, expiredAt: getSessionExpireDate() });\n    }\n  };\n\n  const logout = () => {\n    setSession(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ users, session, createUser, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/B,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAa,CAAyB,IAAI,CAAC;AAE5E,MAAMC,mBAAmB,GAAG,MAAM;AAElC,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAU,EAAE,CAAC;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,KAAK,CAACW,QAAQ,CAAkB,IAAI,CAAC;EAEnEX,KAAK,CAACc,SAAS,CAAC,MAAM;IACpB,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACZ,mBAAmB,CAAC;IAErD,MAAMa,OAAO,GAAGH,GAAG,GACdI,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,GAChBM,SAAS;IAEb,IAAIH,OAAO,EAAE;MACXR,OAAO,CAACQ,OAAO,CAACT,KAAK,CAAC;MACtBI,UAAU,CAACK,OAAO,CAACN,OAAO,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMU,UAAU,GAAIC,IAAW,IAAK;IAClCb,OAAO,CAAC,CAAC,GAAGD,KAAK,EAAEc,IAAI,CAAC,CAAC;IACzBV,UAAU,CAAC;MAAEW,KAAK,EAAED,IAAI,CAACC,KAAK;MAAEC,SAAS,EAAEC,oBAAoB,CAAC;IAAE,CAAC,CAAC;EACtE,CAAC;EAED,MAAMA,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBD,IAAI,CAACE,WAAW,CAACF,IAAI,CAACG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC;IACxC,OAAOH,IAAI;EACb,CAAC;EAED,MAAMI,KAAK,GAAGA,CAACP,KAAa,EAAEQ,QAAgB,KAAK;IACjD,MAAMC,SAAS,GAAGxB,KAAK,CAACyB,IAAI,CACzBX,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKA,KAAK,IAAID,IAAI,CAACS,QAAQ,KAAKA,QACtD,CAAC;IACD,IAAIC,SAAS,EAAE;MACbpB,UAAU,CAAC;QAAEW,KAAK,EAAES,SAAS,CAACT,KAAK;QAAEC,SAAS,EAAEC,oBAAoB,CAAC;MAAE,CAAC,CAAC;IAC3E;EACF,CAAC;EAED,MAAMS,MAAM,GAAGA,CAAA,KAAM;IACnBtB,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE5B,KAAK;MAAEG,OAAO;MAAEU,UAAU;MAAES,KAAK;MAAEI;IAAO,CAAE;IAAA5B,QAAA,EACxEA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CA/CIF,YAA+C;AAAAoC,EAAA,GAA/CpC,YAA+C;AAiDrD,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}