{"ast":null,"code":"var _jsxFileName = \"/Users/manana/Documents/auth-test-task/src/context/authContext.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { authReducer } from \"./authReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getStorageContext = () => {\n  const raw = localStorage.getItem(CONTEXT_STORAGE_KEY);\n  return raw ? JSON.parse(raw) : undefined;\n};\nconst mainReducer = ({\n  auth\n}, action) => ({\n  auth: authReducer(auth, action)\n});\nconst initialState = {\n  auth: {\n    users: [],\n    session: null\n  }\n};\nexport const AuthContext = /*#__PURE__*/React.createContext({\n  state: initialState,\n  dispatch: () => null\n});\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = React.useReducer(mainReducer, initialState);\n  React.useEffect(() => {\n    const context = getStorageContext();\n    if (context) {\n      setUser(context.users);\n      setSession(context.session);\n    }\n  }, []);\n  const createUser = user => {\n    // const newUsers = [...users, user];\n    // const newSession = { email: user.email, expiredAt: getSessionExpireDate() };\n    // setUser(newUsers);\n    // setSession(newSession);\n\n    // localStorage.setItem(\n    //   CONTEXT_STORAGE_KEY,\n    //   JSON.stringify({ users: newUsers, session: newSession })\n    // );\n  };\n  const login = (email, password) => {\n    const findMatch = users.find(user => user.email === email && user.password === password);\n    if (findMatch) {\n      const newSession = {\n        email: findMatch.email,\n        expiredAt: getSessionExpireDate()\n      };\n      setSession(newSession);\n      localStorage.setItem(CONTEXT_STORAGE_KEY, JSON.stringify({\n        users,\n        session: newSession\n      }));\n      return true;\n    }\n    return false;\n  };\n  const logout = () => {\n    setSession(null);\n    localStorage.setItem(CONTEXT_STORAGE_KEY, JSON.stringify({\n      users,\n      session: null\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      createUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport default AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","authReducer","jsxDEV","_jsxDEV","getStorageContext","raw","localStorage","getItem","CONTEXT_STORAGE_KEY","JSON","parse","undefined","mainReducer","auth","action","initialState","users","session","AuthContext","createContext","state","dispatch","AuthProvider","children","_s","useReducer","useEffect","context","setUser","setSession","createUser","user","login","email","password","findMatch","find","newSession","expiredAt","getSessionExpireDate","setItem","stringify","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manana/Documents/auth-test-task/src/context/authContext.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n  AuthContextType,\n  ISession,\n  IUser,\n  AuthContextStorageType,\n} from \"./auth\";\nimport { AuthState, authReducer, AuthActions } from \"./authReducer\";\n\n\nexport const getStorageContext = () => {\n  const raw = localStorage.getItem(CONTEXT_STORAGE_KEY);\n  return raw ? (JSON.parse(raw) as AuthContextStorageType) : undefined;\n};\n\ntype InitialStateType = {\n  auth: AuthState;\n};\n\nconst mainReducer = ({ auth }: InitialStateType, action: AuthActions) => ({\n  auth: authReducer(auth, action),\n});\n\nconst initialState = {\n  auth: {\n    users: [],\n    session: null,\n  },\n};\n\nexport const AuthContext = React.createContext<{\n  state: InitialStateType;\n  dispatch: React.Dispatch<AuthActions>;\n}>({\n  state: initialState,\n  dispatch: () => null,\n});\n\nconst AuthProvider: React.FC<React.PropsWithChildren> = ({ children }) => {\n  const [state, dispatch] = React.useReducer(mainReducer, initialState);\n\n  React.useEffect(() => {\n    const context = getStorageContext();\n\n    if (context) {\n      setUser(context.users);\n      setSession(context.session);\n    }\n  }, []);\n\n  const createUser = (user: IUser) => {\n    // const newUsers = [...users, user];\n    // const newSession = { email: user.email, expiredAt: getSessionExpireDate() };\n    // setUser(newUsers);\n    // setSession(newSession);\n\n    // localStorage.setItem(\n    //   CONTEXT_STORAGE_KEY,\n    //   JSON.stringify({ users: newUsers, session: newSession })\n    // );\n  };\n\n  const login = (email: string, password: string): boolean => {\n    const findMatch = users.find(\n      (user) => user.email === email && user.password === password\n    );\n    if (findMatch) {\n      const newSession = {\n        email: findMatch.email,\n        expiredAt: getSessionExpireDate(),\n      };\n\n      setSession(newSession);\n\n      localStorage.setItem(\n        CONTEXT_STORAGE_KEY,\n        JSON.stringify({ users, session: newSession })\n      );\n\n      return true;\n    }\n\n    return false;\n  };\n\n  const logout = () => {\n    setSession(null);\n    localStorage.setItem(\n      CONTEXT_STORAGE_KEY,\n      JSON.stringify({ users, session: null })\n    );\n  };\n\n  return (\n    <AuthContext.Provider value={{ state, createUser, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAO9B,SAAoBC,WAAW,QAAqB,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpE,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EACrC,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAACC,mBAAmB,CAAC;EACrD,OAAOH,GAAG,GAAII,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,GAA8BM,SAAS;AACtE,CAAC;AAMD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAuB,CAAC,EAAEC,MAAmB,MAAM;EACxED,IAAI,EAAEZ,WAAW,CAACY,IAAI,EAAEC,MAAM;AAChC,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG;EACnBF,IAAI,EAAE;IACJG,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,gBAAGlB,KAAK,CAACmB,aAAa,CAG3C;EACDC,KAAK,EAAEL,YAAY;EACnBM,QAAQ,EAAEA,CAAA,KAAM;AAClB,CAAC,CAAC;AAEF,MAAMC,YAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACJ,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,KAAK,CAACyB,UAAU,CAACb,WAAW,EAAEG,YAAY,CAAC;EAErEf,KAAK,CAAC0B,SAAS,CAAC,MAAM;IACpB,MAAMC,OAAO,GAAGvB,iBAAiB,CAAC,CAAC;IAEnC,IAAIuB,OAAO,EAAE;MACXC,OAAO,CAACD,OAAO,CAACX,KAAK,CAAC;MACtBa,UAAU,CAACF,OAAO,CAACV,OAAO,CAAC;IAC7B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,UAAU,GAAIC,IAAW,IAAK;IAClC;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;EAAA,CACD;EAED,MAAMC,KAAK,GAAGA,CAACC,KAAa,EAAEC,QAAgB,KAAc;IAC1D,MAAMC,SAAS,GAAGnB,KAAK,CAACoB,IAAI,CACzBL,IAAI,IAAKA,IAAI,CAACE,KAAK,KAAKA,KAAK,IAAIF,IAAI,CAACG,QAAQ,KAAKA,QACtD,CAAC;IACD,IAAIC,SAAS,EAAE;MACb,MAAME,UAAU,GAAG;QACjBJ,KAAK,EAAEE,SAAS,CAACF,KAAK;QACtBK,SAAS,EAAEC,oBAAoB,CAAC;MAClC,CAAC;MAEDV,UAAU,CAACQ,UAAU,CAAC;MAEtB/B,YAAY,CAACkC,OAAO,CAClBhC,mBAAmB,EACnBC,IAAI,CAACgC,SAAS,CAAC;QAAEzB,KAAK;QAAEC,OAAO,EAAEoB;MAAW,CAAC,CAC/C,CAAC;MAED,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBb,UAAU,CAAC,IAAI,CAAC;IAChBvB,YAAY,CAACkC,OAAO,CAClBhC,mBAAmB,EACnBC,IAAI,CAACgC,SAAS,CAAC;MAAEzB,KAAK;MAAEC,OAAO,EAAE;IAAK,CAAC,CACzC,CAAC;EACH,CAAC;EAED,oBACEd,OAAA,CAACe,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAExB,KAAK;MAAEU,UAAU;MAAEE,KAAK;MAAEU;IAAO,CAAE;IAAAnB,QAAA,EAC/DA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CA5DIF,YAA+C;AAAA2B,EAAA,GAA/C3B,YAA+C;AA8DrD,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}